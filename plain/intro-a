SYNOPSIS
     ksh [-+abCefhiklmnpruvXx] [-+o option]
	 [-c string | -s | file [argument ...]]

DESCRIPTION
     ksh is a command interpreter intended for both interactive and shell
     script use.  Its command language is a superset of the sh(1) shell
     language.

     The options are as follows:

     -c string
	     ksh will execute the command(s) contained in string.

     -i	     Interactive shell.	 A shell is interactive if this option is
	     used or if both standard input and standard error are attached to
	     a tty(4).	An interactive shell has job control enabled, ignores
	     the SIGINT, SIGQUIT, and SIGTERM signals, and prints prompts
	     before reading input (see the PS1 and PS2 parameters).  For non-
	     interactive shells, the trackall option is on by default (see the
	     set command below).

     -l	     Login shell.  If the basename the shell is called with (i.e.
	     argv[0]) starts with - or if this option is used, the shell is
	     assumed to be a login shell and the shell reads and executes the
	     contents of /etc/profile and $HOME/.profile if they exist and are
	     readable.

     -p	     Privileged shell.	A shell is privileged if this option is used
	     or if the real user ID or group ID does not match the effective
	     user ID or group ID (see getuid(2) and getgid(2)).	 A privileged
	     shell does not process $HOME/.profile nor the ENV parameter (see
	     below).  Instead, the file /etc/suid_profile is processed.
	     Clearing the privileged option causes the shell to set its
	     effective user ID (group ID) to its real user ID (group ID).

     -r	     Restricted shell.	A shell is restricted if this option is
	     used; if the basename the shell was invoked with was rksh; or
	     if the SHELL parameter is set to rksh.  The following
	     restrictions come into effect after the shell processes any
	     profile and ENV files:

	       The cd command is disabled.
	       The SHELL, ENV, and PATH parameters cannot be changed.
	       Command names can't be specified with absolute or relative
		 paths.
	       The -p option of the built-in command command can't be used.
	       Redirections that create files can't be used (i.e. >, >|,
		 >>, <>).

     -s	     The shell reads commands from standard input; all non-option
	     arguments are positional parameters.

     In addition to the above, the options described in the set built-in
     command can also be used on the command line: both [-+abCefhkmnuvXx] and
     [-+o option] can be used for single letter or long options, respectively.

     If neither the -c nor the -s option is specified, the first non-option
     argument specifies the name of a file the shell reads commands from.  If
     there are no non-option arguments, the shell reads commands from the
     standard input.  The name of the shell (i.e. the contents of $0) is
     determined as follows: if the -c option is used and there is a non-option
     argument, it is used as the name; if commands are being read from a file,
     the file is used as the name; otherwise, the basename the shell was
     called with (i.e. argv[0]) is used.

     If the ENV parameter is set when an interactive shell starts (or, in the
     case of login shells, after any profiles are processed), its value is
     subjected to parameter, command, arithmetic, and tilde (~) substitution
     and the resulting file (if any) is read and executed.  In order to have
     an interactive (as opposed to login) shell process a startup file, ENV
     may be set and exported (see below) in $HOME/.profile - future
     interactive shell invocations will process any file pointed to by $ENV:

	   export ENV=$HOME/.kshrc

     $HOME/.kshrc is then free to specify instructions for interactive shells.
     For example, the global configuration file may be sourced:

	   . /etc/ksh.kshrc

     The above strategy may be employed to keep setup procedures for login
     shells in $HOME/.profile and setup procedures for interactive shells in
     $HOME/.kshrc.  Of course, since login shells are also interactive, any
     commands placed in $HOME/.kshrc will be executed by login shells too.

     The exit status of the shell is 127 if the command file specified on the
     command line could not be opened, or non-zero if a fatal syntax error
     occurred during the execution of a script.	 In the absence of fatal
     errors, the exit status is that of the last command executed, or zero, if
     no command is executed.

